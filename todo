Separate out the enums from enums.h
DoganBuilding is currently relying on the `getComplementDirections` function returning North and South first where relevant. Figure out a way to not rely on this.
Add ports
Add cards
Add players
Add boundary checking for config class
Change uses of push_back to emplace_back where applicable
Change all declarations of type* var to type *var
Change all declarations of type& var to type &var
Add const to all getter functions like func(...) const {}
add use of std::optional where applicable
Figure out a way to bring the getBoard function to the parent BoardInterface (std::map<Coordinate, Cell> is not covariant to std::map<Coordinate, Cell>, so can't override/load it)
Decide if I want to return a shared_ptr in [] operator
Add CppDoc
Set int to size_t where relevant
Figure out a better way to implement DoganPort other than std::vector<std::vector<DoganVertex>> 
Fix CellInterface to have more members
Decide if it's better to always do checks for if DoganVertex is a valid tile on the board
Do checks if village exists when building city
Actually add Google Tests
Add general Vertex Class and extend Dogan Vertex
Add General Player class and extend Dogan Player
Add more custom exceptions
Move everything to Dogan namespace
Optimize CMakeFiles
Add checking to see if a DoganPort is valid
Move vertex up to DoganGame?? (when creating ports/buildings etc. so you construct it in DoganGame. Would probably be faster)
Move ResourceType down to Bank. 
Deal with if Bank is bankrupt
Figure out sizeDifferences in getDevelopments